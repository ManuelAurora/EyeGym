<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "delay(seconds : Double, completion : () -&gt; ()) -&gt; ():Helpers.swift">
         <PersistentStrings>
            <PersistentString
               value = "DispatchTime.now()">
            </PersistentString>
            <PersistentString
               value = "Double(Int64(Double(NSEC_PER_SEC) * seconds)) / Double(NSEC_PER_SEC)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.start() -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.frame.height">
            </PersistentString>
            <PersistentString
               value = "view.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.animateView() -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_trainingInProcess">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "StartButtonViewModel.makeMaskFor(button : UIButton) -&gt; ():StartButtonViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "gradientLayer.mask">
            </PersistentString>
            <PersistentString
               value = "gradientLayer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.animate(UIImageView, with : Double, direction : TrainingViewController.Direction) -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "(view!.bounds.width - image.frame.width / 2)">
            </PersistentString>
            <PersistentString
               value = "( 0 + image.frame.width / 2)">
            </PersistentString>
            <PersistentString
               value = "leftOriginalCenter.x">
            </PersistentString>
            <PersistentString
               value = "rightOriginalCenter.x">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "StartButtonViewModel.createGradienAnimation() -&gt; CABasicAnimation:StartButtonViewModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "gradientLayer.mask">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.(animateView(TrainingViewController) -&gt; () -&gt; ()).(closure #2):TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_trainingInProcess">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.(animateView(TrainingViewController) -&gt; () -&gt; ()).(closure #1):TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_trainingInProcess">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.startStopTraining() -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_trainingInProcess">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.toggleButtonTitle() -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "startButton.titleLabel!.text">
            </PersistentString>
            <PersistentString
               value = "isStarted">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.viewDidLayoutSubviews() -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "startButtonViewModel.gradientLayer.mask">
            </PersistentString>
            <PersistentString
               value = "startButton.bounds">
            </PersistentString>
            <PersistentString
               value = "startButton.frame.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.createCircles() -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_leftCircle">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.startButton.didset:TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "startButtonViewModel.gradientLayer.mask">
            </PersistentString>
            <PersistentString
               value = "startButtonViewModel.gradientLayer.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.(animateImage(UIImageView, time : CGFloat) -&gt; ()).(closure #1):TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image.frame.origin.x">
            </PersistentString>
            <PersistentString
               value = "self.view.frame.size.width">
            </PersistentString>
            <PersistentString
               value = "speed">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "StartButton.textForMask.didset:StartButtonView.swift">
         <PersistentStrings>
            <PersistentString
               value = "bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.(animationDidStop(CAAnimation, finished : Bool) -&gt; ()).(closure #1):TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "anim">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TrainingViewController.animationDidStop(CAAnimation, finished : Bool) -&gt; ():TrainingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "layersToRemoveArray">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
